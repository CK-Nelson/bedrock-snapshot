
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { String, Int, BigInt, Float, ID, Bytes, Timestamp, Boolean } from '@sentio/sdk/store'
import { Entity, Required, One, Many, Column, ListColumn, AbstractEntity } from '@sentio/sdk/store'
import { BigDecimal } from '@sentio/bigdecimal'
import { DatabaseSchema } from '@sentio/sdk'

export enum Label {
  LP = "LP", YT = "YT"
}




@Entity("AccountSnapshot")
export class AccountSnapshot extends AbstractEntity  {

	@Required
	@Column("ID")
	id: ID

	@Required
	@Column("Int")
	lastUpdated: Int

	@Required
	@Column("BigInt")
	lastImpliedHolding: BigInt
  constructor(data: Partial<AccountSnapshot>) {super()}
}

@Entity("UserShareEvent")
export class UserShareEvent extends AbstractEntity  {

	@Required
	@Column("ID")
	id: ID

	@Required
	@Column("String")
	label: Label

	@Required
	@Column("String")
	account: String

	@Required
	@Column("BigInt")
	share: BigInt

	@Required
	@Column("Int")
	timestamp: Int

	@Required
	@Column("Int")
	blockNumber: Int

	@Required
	@Column("Int")
	log_index: Int
  constructor(data: Partial<UserShareEvent>) {super()}
}


const source = `type AccountSnapshot @entity {
    id: ID!
    lastUpdated: Int!
    lastImpliedHolding: BigInt!
}

enum Label {
    LP,
    YT
}

type UserShareEvent @entity {
    id: ID!
    label: Label!
    account: String!
    share: BigInt!
    timestamp: Int!
    blockNumber: Int!
    log_index: Int!
}`
DatabaseSchema.register({
  source,
  entities: {
    "AccountSnapshot": AccountSnapshot,
		"UserShareEvent": UserShareEvent
  }
})
